% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MTP.R
\name{MTP}
\alias{MTP}
\title{Modified Treatment Policy Class Constructor}
\description{
The core idea is that the MTP class should support the storing of the
functions relevant to specifying a piecewise smooth invertible policy.
}
\details{
In the estimation of a modified treatment policy (MTP), one needs
several ingredients in order to use the transformation of variables
implied by the policy including: the inverse policy, the segments
of the domain on which the policy is smooth and invertible, and the
derivative of the policy.

In the initialization of an MTP, we distinguish between
the simplest case (no piecewise definition necessary) and the
more complicated case where the function is defined in a piecewise
manner.

The non-piecewise case may be defined using a simplified syntax
that does not involve wrapping every argument inside a \code{list()}.

An example of a policy where the regions must be
}
\examples{
\dontrun{
# Imagine a policy that reduces the exposure by 5 for everyone:

mtp <- MTP$new(
  smooth_invertible_regions = function(A, L) { return(TRUE) },
  policy = function(A, L) { A - 5 },
  inverse_policy = function(A, L) { A + 5 },
  derivative_of_policy = function(A, L) { 1 }
)
mtp$policy[[1]](5)
mtp$which_region(A = data.frame(1), L = data.frame(1))

# An improvement grounded in reality might be to specify that the policy
# is a reduction of surgery duration by 5-minutes only when
# the original/natural surgery duration was 5+ minutes to begin with:

mtp <- MTP$new(
  smooth_invertible_regions = list(
    region1 = function(A, L) { return( A \%btn[)\% c(5, Inf) ) },
    region2 = function(A, L) { return( A \%btn[)\% c(0, 5) ) }
    ),
  policy = list(
    policy1 = function(A, L) { A - 5 },
    policy2 = function(A, L) { A }
    ),
  inverse_policy = list(
    function(A, L) { A + 5 },
    function(A, L) { A }
  ),
  derivative_of_policy = list(
    function(A, L) { 1 },
    function(A, L) { 1 }
    )
)
mtp$policy[[2]](5)

example_df <- data.frame(
  A = c(15, 4),
  L = c(35, 25))

mtp$which_region(example_df$A, example_df[,'L', drop=FALSE])
mtp$apply_policy(example_df$A, example_df[,'L', drop=FALSE])
}


Initialize a Modified Treatment Policy (MTP)

In order to specify an MTP, we require a specification of the
piecewise sections the policy is invertible over (domain),
the policy function (which we require to be defined piecewise
over the same segments of the policy-input-space, i.e., domain),
an inverse policy similarly piecewise defined, and its
derivative.

Here, we have opted to require that the user specify these
rather than taking a computational approach to
estimating them from the policy function to avoid
1) additional computing work [taking derivatives / testing for
invertibility, etc. can be computationally hard] and 2) more complex code
that may be challenging to debug.

Defaults are not provided so that users do not forget to specify
every necessary part of an MTP

We don't want users to accidentally only specify part of their policy
and use the defaults without realizing they've used the defaults that
may not match with their policy.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MTP-new}{\code{MTP$new()}}
\item \href{#method-MTP-which_region}{\code{MTP$which_region()}}
\item \href{#method-MTP-apply_policy}{\code{MTP$apply_policy()}}
\item \href{#method-MTP-apply_inverse_policy}{\code{MTP$apply_inverse_policy()}}
\item \href{#method-MTP-clone}{\code{MTP$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTP-new"></a>}}
\if{latex}{\out{\hypertarget{method-MTP-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTP$new(
  smooth_invertible_regions,
  policy,
  inverse_policy,
  derivative_of_policy
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTP-which_region"></a>}}
\if{latex}{\out{\hypertarget{method-MTP-which_region}{}}}
\subsection{Method \code{which_region()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTP$which_region(A, L)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTP-apply_policy"></a>}}
\if{latex}{\out{\hypertarget{method-MTP-apply_policy}{}}}
\subsection{Method \code{apply_policy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTP$apply_policy(A, L)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTP-apply_inverse_policy"></a>}}
\if{latex}{\out{\hypertarget{method-MTP-apply_inverse_policy}{}}}
\subsection{Method \code{apply_inverse_policy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTP$apply_inverse_policy(A, L)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTP-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MTP-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTP$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
